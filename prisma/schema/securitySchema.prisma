// Security-related Prisma schema additions

// Session management
model Session {
  id          String      @id @default(uuid())
  userId      String
  token       String      @unique
  userAgent   String?
  ipAddress   String?
  expiresAt   DateTime
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  
  user        User        @relation(fields: [userId], references: [id])
}

// Token blacklist for revoked tokens
model TokenBlacklist {
  id          String      @id @default(uuid())
  token       String      @unique
  reason      String?
  createdAt   DateTime    @default(now())
}

// Security event logging
model SecurityLog {
  id          String      @id @default(uuid())
  userId      String?
  eventType   String      // LOGIN_ATTEMPT, PASSWORD_CHANGE, etc.
  status      String      // SUCCESS, FAILURE
  ipAddress   String?
  userAgent   String?
  details     Json?
  createdAt   DateTime    @default(now())
  
  user        User?       @relation(fields: [userId], references: [id])
}

// User security settings
model SecuritySettings {
  id                    String    @id @default(uuid())
  userId                String    @unique
  twoFactorEnabled      Boolean   @default(false)
  twoFactorSecret       String?
  loginNotifications    Boolean   @default(true)
  ipWhitelist           String[]
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  
  user                  User      @relation(fields: [userId], references: [id])
}

// Update User model to include security relations
/*
model User {
  // Existing fields...
  
  sessions              Session[]
  securityLogs          SecurityLog[]
  securitySettings      SecuritySettings?
}
*/