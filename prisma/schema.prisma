// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 String            @id @default(uuid())
  email              String            @unique
  password           String
  userType           String            // 'entrepreneur' or 'funder'
  subscriptionTier   String            // Basic, Chrome, Bronze, Silver, Gold, Platinum
  verificationLevel  String            // None, BusinessPlan, UseCase, etc.
  emailVerified      Boolean           @default(false)
  phoneVerified      Boolean           @default(false)
  
  // 2FA fields
  totpSecret        String?           // TOTP secret for authenticator
  tempTOTPSecret    String?           // Temporary secret during setup
  totpEnabled       Boolean           @default(false)
  phone             String?
  verificationCodes VerificationCode[]
  recoveryCodes     RecoveryCode[]
  
  // Other fields
  verificationToken  String?
  resetPasswordToken String?
  stripeCustomerId  String?
  createdAt         DateTime         @default(now())
  updatedAt         DateTime         @updatedAt
  
  // Relations
  entrepreneurProfile EntrepreneurProfile?
  funderProfile      FunderProfile?
  matches            Match[]           @relation("UserMatches")
  matchedWith        Match[]           @relation("MatchedWithUsers")
  sentMessages       Message[]         @relation("SentMessages")
  receivedMessages   Message[]         @relation("ReceivedMessages")
  subscriptions      Subscription[]
  notifications      Notification[]
}

model VerificationCode {
  id        String   @id @default(uuid())
  userId    String
  code      String
  type      String   // SMS, EMAIL
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id])
}

model RecoveryCode {
  id        String   @id @default(uuid())
  userId    String
  code      String
  used      Boolean  @default(false)
  createdAt DateTime @default(now())
  
  user      User     @relation(fields: [userId], references: [id])
}

// [Rest of the existing models remain unchanged]