datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                 String            @id @default(uuid())
  email              String            @unique
  password           String
  userType          String            // 'entrepreneur' or 'funder'
  subscriptionTier   String            // Basic, Chrome, Bronze, Silver, Gold, Platinum
  verificationLevel  String            // None, BusinessPlan, UseCase, etc.
  securityStatus     String            @default("ACTIVE") // ACTIVE, LOCKED, SUSPENDED
  lastSecurityIncident DateTime?
  emailVerified      Boolean           @default(false)
  phoneVerified      Boolean           @default(false)
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  // Relations
  entrepreneurProfile EntrepreneurProfile?
  funderProfile      FunderProfile?
  matches            Match[]           @relation("UserMatches")
  matchedWith        Match[]           @relation("MatchedWithUsers")
  messages           Message[]
  verificationRequests VerificationRequest[]
  profileBoosts      ProfileBoost[]
  accessLogs         AccessLog[]
  profileViews       ProfileView[]     @relation("ViewedProfiles")
  viewedBy           ProfileView[]     @relation("Viewers")
}

model AccessLog {
  id          String    @id @default(uuid())
  userId      String
  action      String    // READ, WRITE, UPDATE, DELETE, etc.
  resource    String    // profile, match, message, etc.
  resourceId  String?
  success     Boolean
  reason      String?
  metadata    Json?
  createdAt   DateTime  @default(now())

  user        User      @relation(fields: [userId], references: [id])
}

// Additional models...