model Document {
  id                String              @id @default(uuid())
  name              String
  mimeType          String
  size              Int
  ownerId           String
  currentVersionId  String?            // Reference to current version
  uploadedAt        DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  encryption        DocumentEncryption?
  versions          DocumentVersion[]
  owner             User                @relation("OwnedDocuments", fields: [ownerId], references: [id])
  sharedWith        User[]              @relation("SharedDocuments")
  currentVersion    DocumentVersion?    @relation("CurrentVersion", fields: [currentVersionId], references: [id])
}

model DocumentVersion {
  id            String    @id @default(uuid())
  documentId    String
  versionNumber Int
  createdAt     DateTime  @default(now())
  createdById   String
  s3Key         String    // Path in S3
  changes       String?   // Description of changes
  size          Int
  checksum      String
  
  document      Document  @relation(fields: [documentId], references: [id])
  creator       User      @relation(fields: [createdById], references: [id])
  currentFor    Document? @relation("CurrentVersion")

  @@unique([documentId, versionNumber])
}

// Update User model
model User {
  // ... existing fields ...
  createdVersions     DocumentVersion[]  // Versions created by this user
}